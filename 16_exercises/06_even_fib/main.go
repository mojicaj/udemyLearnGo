package main

import (
	"fmt"
)

func main() {
	var sum int
	even := evenFib()
	for _, v := range even {
		sum += v
	}
	fmt.Println(sum)
}

func evenFib() []int {
	i := 1
	fib := 2
	var even []int
	for fib <= 4000000 {
		if fib%2 == 0 {
			even = append(even, fib)
		}
		hold := fib
		fib += i
		i = hold
	}
	return even
}

/*
https://projecteuler.net/problem=2
Even Fibonacci numbers

Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.

streamlined solution: https://zach.se/project-euler-solutions/2/
for a, b := 1, 2; b <= 4e6; a, b = b, a+b {
        if b%2 == 0 {
            sum += b
        }
    }


*/
